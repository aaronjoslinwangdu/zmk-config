/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "zmk-helpers/helper.h"

// corne key mappings
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2

// mod tap combos
#define MT_LEFT_THUMB_BT 1 TAB
#define MT_LEFT_THUMB 2 ESC
#define MT_RIGHT_THUMB 3 RET

// constants for hold tap 
#define TAPPING_TERM_MS 200
#define QUICK_TAP_MS 125
#define REQUIRE_PRIOR_IDLE_MS 125

/ {
        behaviors {
                lh_hr_mt: lh_hr_mt {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <TAPPING_TERM_MS>;
                        quick-tap-ms = <QUICK_TAP_MS>;
                        require-prior-idle-ms = <REQUIRE_PRIOR_IDLE_MS>;
                        hold-trigger-key-positions = <KEYS_L THUMBS>;
                        hold-trigger-on-release;
                        bindings =  <&kp>, <&kp>;
                };
                rh_hr_mt: rh_hr_mt {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <TAPPING_TERM_MS>;
                        quick-tap-ms = <QUICK_TAP_MS>;
                        require-prior-idle-ms = <REQUIRE_PRIOR_IDLE_MS>;
                        hold-trigger-key-positions = <KEYS_R THUMBS>;
                        hold-trigger-on-release;
                        bindings =  <&kp>, <&kp>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                // default_layer (0)
                // -----------------------------------------------------------------------------------------
                // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
                // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
                // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
                //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

                default_layer {
                        bindings = <
                                &none &kp Q &kp W &kp F &kp P &kp B     &kp J &kp L &kp U &kp Y &kp SQT &none                   // top row
                                &none &lh_hr_mt LCTRL A &lh_hr_mt LALT R &lh_hr_mt LGUI S &lh_hr_mt LSHFT T &kp G               // middle row left
                                &kp M &rh_hr_mt RSHFT N &rh_hr_mt RGUI E &rh_hr_mt RALT I &rh_hr_mt RCTRL O &none               // middle row right       
                                &none &kp Z &kp X &kp C &kp D &kp V     &kp K &kp H &kp COMMA &kp DOT &kp FSLH &none            // bottom row
                                &mt MT_LEFT_THUMB_BT LGUI &kp SPACE &mt MT_LEFT_THUMB   &mt MT_RIGHT_THUMB &kp BKSP &caps_word  // thumbs
                        >;
                };

                // bt_layer (1)
                // -----------------------------------------------------------------------------------------
                // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
                // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
                // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
                //                    | GUI |     | SPC |   | ENT |     | ALT |

                bt_layer {
                        bindings = <
                                &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
                                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
                                &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                                                &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                // symbol_layer (2)
                // -----------------------------------------------------------------------------------------
                // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
                // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
                // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
                //                    | GUI |     | SPC |   | ENT |     | ALT |

                symbol_layer {
                        bindings = <
                                &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
                                &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
                                &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                                                        &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                // number_layer (3)
                // -----------------------------------------------------------------------------------------
                // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
                // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
                // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
                //                    | GUI |     | SPC |   | ENT |     | ALT |
                
                number_layer {
                        bindings = <
                                &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
                                &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
                                &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                                                        &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
